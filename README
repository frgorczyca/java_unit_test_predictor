To run project you need to call it from root project directory (program_analysis_project)
Under analyzer data directory should be created when runned first time
Content of data directory:
    srcs.csv -> holds last known modification time of files in project sources
    tests.csv -> holds list of known tests files
    test_dep.json -> for each test file it holds what objects are tested in scope of file and coressponding methods
    /bytecode/curr -> current version of generated bytecode
    /bytecode/old -> last known state of bytecode
    /olds-src -> copy of .java sources files, needed to create diffs

To use SyntaxAnalyzer based on Tree-Sitter you have to create in project root directory "tree-sitter" and put there shared
library for java language (named libtree-sitter-java.so)

To automatically generate bytecode from recently compiled binaries you have to create in project root directory "jvm2json"
and copy there version 9.2.8 of jvm2json (so directory looks like: jvm2json/9.2.8/).

To use bytecode analyzer set use_bytecode to 1, otherwise set it to 0
Same for syntax, set use_syntax to 1 to enable, 0 to disable

If you dont want to automatically run jvm2json, set use_jvm2json to False inside Manager class. However, you have to manually create
bytecode/curr and bytecode/old directoreies and fill them with jsons.